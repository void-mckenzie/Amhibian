{'epochs': 20, 'batch_size': 1, 'ft_shots': 15, 'lr': 0.001, 'wd': 3e-05, 'loss_type': 'dice', 'scheduler': None, 'scheduler_params': None, 'norm_type': 'instance', 'volumetric': False, 'max_images': None, 'data_regime': 'all'}
Starting fine-tuning
Save path None
/scratch2/mganesh/MetaMedSeg/MetaMedSeg/splits/spleen
Using dice
Creating data loaders for fine-tuning
Training on all train data
Traceback (most recent call last):
  File "experiment_runner.py", line 235, in <module>
    num_selections=data.get("num_selections"), save_pth=save_path)
  File "experiment_runner.py", line 127, in fine_tune
    data_regime=data_regime, save_pth=save_pth))
  File "experiment_runner.py", line 95, in fine_tune_one_selection
    trainer.train_and_evaluate_all()
  File "/scratch2/mganesh/MetaMedSeg/MetaMedSeg/meta_learning/fine_tuning.py", line 247, in train_and_evaluate_all
    model = self.train(train_loader, val_loader, evaluate_every, name)
  File "/scratch2/mganesh/MetaMedSeg/MetaMedSeg/meta_learning/fine_tuning.py", line 135, in train
    model, optimizer, lr_scheduler = self.setup_model()
  File "/scratch2/mganesh/MetaMedSeg/MetaMedSeg/meta_learning/fine_tuning.py", line 220, in setup_model
    model.load_state_dict(self.init_weights)
  File "/home1/mganesh/miniconda3/envs/medseg/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1672, in load_state_dict
    self.__class__.__name__, "\n\t".join(error_msgs)))
RuntimeError: Error(s) in loading state_dict for UNet_Cells:
	Missing key(s) in state_dict: "dconv_down1.0.weight", "dconv_down1.0.bias", "dconv_down1.3.weight", "dconv_down1.3.bias", "dconv_down2.0.weight", "dconv_down2.0.bias", "dconv_down2.3.weight", "dconv_down2.3.bias", "dconv_down3.0.weight", "dconv_down3.0.bias", "dconv_down3.3.weight", "dconv_down3.3.bias", "dconv_up2.0.weight", "dconv_up2.0.bias", "dconv_up2.3.weight", "dconv_up2.3.bias", "dconv_up1.0.weight", "dconv_up1.0.bias", "dconv_up1.3.weight", "dconv_up1.3.bias", "conv_last.weight", "conv_last.bias".
	Unexpected key(s) in state_dict: "encoder.convs.0.conv1.conv.0.weight", "encoder.convs.0.conv1.conv.0.bias", "encoder.convs.0.conv1.conv.1.weight", "encoder.convs.0.conv1.conv.1.bias", "encoder.convs.0.conv1.conv.1.running_mean", "encoder.convs.0.conv1.conv.1.running_var", "encoder.convs.0.conv1.conv.1.num_batches_tracked", "encoder.convs.0.conv2.conv.0.weight", "encoder.convs.0.conv2.conv.0.bias", "encoder.convs.0.conv2.conv.1.weight", "encoder.convs.0.conv2.conv.1.bias", "encoder.convs.0.conv2.conv.1.running_mean", "encoder.convs.0.conv2.conv.1.running_var", "encoder.convs.0.conv2.conv.1.num_batches_tracked", "encoder.convs.0.conv3.weight", "encoder.convs.0.conv3.bias", "encoder.convs.0.bn.weight", "encoder.convs.0.bn.bias", "encoder.convs.0.bn.running_mean", "encoder.convs.0.bn.running_var", "encoder.convs.0.bn.num_batches_tracked", "encoder.convs.1.conv1.conv.0.weight", "encoder.convs.1.conv1.conv.0.bias", "encoder.convs.1.conv1.conv.1.weight", "encoder.convs.1.conv1.conv.1.bias", "encoder.convs.1.conv1.conv.1.running_mean", "encoder.convs.1.conv1.conv.1.running_var", "encoder.convs.1.conv1.conv.1.num_batches_tracked", "encoder.convs.1.conv2.conv.0.weight", "encoder.convs.1.conv2.conv.0.bias", "encoder.convs.1.conv2.conv.1.weight", "encoder.convs.1.conv2.conv.1.bias", "encoder.convs.1.conv2.conv.1.running_mean", "encoder.convs.1.conv2.conv.1.running_var", "encoder.convs.1.conv2.conv.1.num_batches_tracked", "encoder.convs.1.conv3.weight", "encoder.convs.1.conv3.bias", "encoder.convs.1.bn.weight", "encoder.convs.1.bn.bias", "encoder.convs.1.bn.running_mean", "encoder.convs.1.bn.running_var", "encoder.convs.1.bn.num_batches_tracked", "encoder.convs.2.conv1.conv.0.weight", "encoder.convs.2.conv1.conv.0.bias", "encoder.convs.2.conv1.conv.1.weight", "encoder.convs.2.conv1.conv.1.bias", "encoder.convs.2.conv1.conv.1.running_mean", "encoder.convs.2.conv1.conv.1.running_var", "encoder.convs.2.conv1.conv.1.num_batches_tracked", "encoder.convs.2.conv2.conv.0.weight", "encoder.convs.2.conv2.conv.0.bias", "encoder.convs.2.conv2.conv.1.weight", "encoder.convs.2.conv2.conv.1.bias", "encoder.convs.2.conv2.conv.1.running_mean", "encoder.convs.2.conv2.conv.1.running_var", "encoder.convs.2.conv2.conv.1.num_batches_tracked", "encoder.convs.2.conv3.weight", "encoder.convs.2.conv3.bias", "encoder.convs.2.bn.weight", "encoder.convs.2.bn.bias", "encoder.convs.2.bn.running_mean", "encoder.convs.2.bn.running_var", "encoder.convs.2.bn.num_batches_tracked", "decoder.deconvs.0.deconv.weight", "decoder.deconvs.0.deconv.bias", "decoder.deconvs.0.conv.conv1.conv.0.weight", "decoder.deconvs.0.conv.conv1.conv.0.bias", "decoder.deconvs.0.conv.conv1.conv.1.weight", "decoder.deconvs.0.conv.conv1.conv.1.bias", "decoder.deconvs.0.conv.conv1.conv.1.running_mean", "decoder.deconvs.0.conv.conv1.conv.1.running_var", "decoder.deconvs.0.conv.conv1.conv.1.num_batches_tracked", "decoder.deconvs.0.conv.conv2.conv.0.weight", "decoder.deconvs.0.conv.conv2.conv.0.bias", "decoder.deconvs.0.conv.conv2.conv.1.weight", "decoder.deconvs.0.conv.conv2.conv.1.bias", "decoder.deconvs.0.conv.conv2.conv.1.running_mean", "decoder.deconvs.0.conv.conv2.conv.1.running_var", "decoder.deconvs.0.conv.conv2.conv.1.num_batches_tracked", "decoder.deconvs.0.conv.conv3.weight", "decoder.deconvs.0.conv.conv3.bias", "decoder.deconvs.0.conv.bn.weight", "decoder.deconvs.0.conv.bn.bias", "decoder.deconvs.0.conv.bn.running_mean", "decoder.deconvs.0.conv.bn.running_var", "decoder.deconvs.0.conv.bn.num_batches_tracked", "decoder.deconvs.0.attn.wx.weight", "decoder.deconvs.0.attn.wx.bias", "decoder.deconvs.0.attn.wg.weight", "decoder.deconvs.0.attn.wg.bias", "decoder.deconvs.0.attn.psi.weight", "decoder.deconvs.0.attn.psi.bias", "decoder.deconvs.1.deconv.weight", "decoder.deconvs.1.deconv.bias", "decoder.deconvs.1.conv.conv1.conv.0.weight", "decoder.deconvs.1.conv.conv1.conv.0.bias", "decoder.deconvs.1.conv.conv1.conv.1.weight", "decoder.deconvs.1.conv.conv1.conv.1.bias", "decoder.deconvs.1.conv.conv1.conv.1.running_mean", "decoder.deconvs.1.conv.conv1.conv.1.running_var", "decoder.deconvs.1.conv.conv1.conv.1.num_batches_tracked", "decoder.deconvs.1.conv.conv2.conv.0.weight", "decoder.deconvs.1.conv.conv2.conv.0.bias", "decoder.deconvs.1.conv.conv2.conv.1.weight", "decoder.deconvs.1.conv.conv2.conv.1.bias", "decoder.deconvs.1.conv.conv2.conv.1.running_mean", "decoder.deconvs.1.conv.conv2.conv.1.running_var", "decoder.deconvs.1.conv.conv2.conv.1.num_batches_tracked", "decoder.deconvs.1.conv.conv3.weight", "decoder.deconvs.1.conv.conv3.bias", "decoder.deconvs.1.conv.bn.weight", "decoder.deconvs.1.conv.bn.bias", "decoder.deconvs.1.conv.bn.running_mean", "decoder.deconvs.1.conv.bn.running_var", "decoder.deconvs.1.conv.bn.num_batches_tracked", "decoder.deconvs.1.attn.wx.weight", "decoder.deconvs.1.attn.wx.bias", "decoder.deconvs.1.attn.wg.weight", "decoder.deconvs.1.attn.wg.bias", "decoder.deconvs.1.attn.psi.weight", "decoder.deconvs.1.attn.psi.bias", "conv.weight", "conv.bias".